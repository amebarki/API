<?php

// autoload_psr4.php @generated by Composer

$vendorDir = dirname(dirname(__FILE__));
$baseDir = dirname($vendorDir);

return array(
    'Tebru\\PhpType\\' => array($vendorDir . '/tebru/php-type/src'),
    'Tebru\\Gson\\' => array($vendorDir . '/tebru/gson-php/src'),
    'Tebru\\AnnotationReader\\' => array($vendorDir . '/tebru/doctrine-annotation-reader/src'),
    'Symfony\\Polyfill\\Mbstring\\' => array($vendorDir . '/symfony/polyfill-mbstring'),
    'Symfony\\Polyfill\\Apcu\\' => array($vendorDir . '/symfony/polyfill-apcu'),
    'Symfony\\Component\\Routing\\' => array($vendorDir . '/symfony/routing'),
    'Symfony\\Component\\HttpKernel\\' => array($vendorDir . '/symfony/http-kernel'),
    'Symfony\\Component\\HttpFoundation\\' => array($vendorDir . '/symfony/http-foundation'),
    'Symfony\\Component\\EventDispatcher\\' => array($vendorDir . '/symfony/event-dispatcher'),
    'Symfony\\Component\\Debug\\' => array($vendorDir . '/symfony/debug'),
    'Symfony\\Component\\Cache\\' => array($vendorDir . '/symfony/cache'),
    'Silex\\' => array($vendorDir . '/silex/silex/src/Silex'),
    'Psr\\SimpleCache\\' => array($vendorDir . '/psr/simple-cache/src'),
    'Psr\\Log\\' => array($vendorDir . '/psr/log/Psr/Log'),
    'Psr\\Http\\Message\\' => array($vendorDir . '/psr/http-message/src'),
    'Psr\\Container\\' => array($vendorDir . '/psr/container/src'),
    'Psr\\Cache\\' => array($vendorDir . '/psr/cache/src'),
    'GuzzleHttp\\Psr7\\' => array($vendorDir . '/guzzlehttp/psr7/src'),
    'GuzzleHttp\\Promise\\' => array($vendorDir . '/guzzlehttp/promises/src'),
    'GuzzleHttp\\' => array($vendorDir . '/guzzlehttp/guzzle/src'),
    'Doctrine\\Common\\Inflector\\' => array($vendorDir . '/doctrine/inflector/lib/Doctrine/Common/Inflector'),
    'Doctrine\\Common\\Cache\\' => array($vendorDir . '/doctrine/cache/lib/Doctrine/Common/Cache'),
    'Doctrine\\Common\\Annotations\\' => array($vendorDir . '/doctrine/annotations/lib/Doctrine/Common/Annotations'),
    'Doctrine\\Common\\' => array($vendorDir . '/doctrine/common/lib/Doctrine/Common'),
    'App\\Users\\Repository\\' => array($baseDir . '/src/Users/Repository'),
    'App\\Users\\Entity\\' => array($baseDir . '/src/Users/Entity'),
    'App\\Users\\Controller\\' => array($baseDir . '/src/Users/Controller'),
    'App\\Pokemon\\Repository\\' => array($baseDir . '/src/Pokemon/Repository'),
    'App\\Pokemon\\Entity\\' => array($baseDir . '/src/Pokemon/Entity'),
    'App\\Pokemon\\Controller\\' => array($baseDir . '/src/Pokemon/Controller'),
);
